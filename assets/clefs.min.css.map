{"version":3,"sources":["generic/reset.scss","grid/grids.scss","settings/variables.scss","grid/cols.scss","grid/aligns.scss","grid/offset.scss","grid/modifiers.scss","grid/responsive.scss"],"names":[],"mappings":"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","file":"clefs.min.css","sourcesContent":["/*RESET CSS*/\r\n    @if $reset {\r\n        * {\r\n            //@extend .font-first;\r\n            margin: 0;\r\n            padding: 0;\r\n            border: 0;\r\n            list-style: none;\r\n            vertical-align: baseline;\r\n            outline: 0;\r\n            box-sizing: border-box;\r\n        }\r\n        html, body {\r\n            min-height: 100%;\r\n            height: 100%;\r\n            \r\n            //FLEXBOX IOS\r\n            width: 100%;\r\n        }\r\n        body {\r\n           font-size: 14px; \r\n           overflow-x: hidden;\r\n        }\r\n        iframe {\r\n            display: block;\r\n        }\r\n        textarea {\r\n            resize: none;\r\n        }\r\n    }\r\n/* /RESET CSS*/","//GRIDS\r\n  @mixin grids {\r\n    .container {\r\n      .clefs {\r\n        //without .-nospace\r\n        &:not(.-nospace) {\r\n          margin-top: getVariable($grid, space) * -1;\r\n          margin-right: getVariable($grid, space) * -1;\r\n          margin-left: getVariable($grid, space) * -1;\r\n        }\r\n        \r\n        &:not(:last-child, .-nospace, .clef, [class*=\"clef-\"]) {\r\n          margin-bottom: getVariable($grid, space);\r\n        }\r\n        \r\n        &:matches(.clef, [class*=\"clef-\"]):not(.-nospace) {\r\n          margin-bottom: getVariable($grid, space) * -1;\r\n        }\r\n      }\r\n    \r\n      .clefs {\r\n        display: flex;\r\n        align-items: stretch;\r\n        flex-direction: row;\r\n        \r\n        &:not(.clef, [class*=\"clef-\"]) {\r\n            flex-basis: 100%;\r\n            min-width: 100%;\r\n        }\r\n        \r\n        //reverse\r\n        .-rev:not(.-claviers) {\r\n            flex-direction: row-reverse;\r\n        }\r\n        \r\n        //claviers\r\n        &.-claviers {\r\n            flex-wrap: wrap;\r\n        }\r\n        //claviers reverse\r\n        &.-claviers.-rev {\r\n            flex-wrap: wrap-reverse;\r\n        }\r\n        &.-claviers.-redall {\r\n            flex-wrap: wrap-reverse;\r\n            flex-direction: row-reverse;\r\n        }\r\n      }\r\n    }\r\n  }\r\n// /GRIDS","//OBJECTS\r\n    $objects: (\r\n        wrapper: 1170, //MAX-WIDTH WRAPPER\r\n        fontSize : 14\r\n    );\r\n\r\n//GRID\r\n    $grid: (\r\n        space: .75rem, //SPACE BETWEEN COLUMNS\r\n        columns: 12, //NUMBER OF COLUMNS\r\n        responsiveTag: \"mobile\" \"plus\" \"tablet\" \"desktop\" \"wide\", //TAGS FOR RESPONSIVE\r\n        responsiveWidth: 368px 568px 768px 1024px 1280px //WIDTH FOR RESPONSIVE\r\n    );\r\n\r\n//COLORS\r\n    $gray-color: #636363;\r\n    $lightgray-color: #d4d4d4;\r\n    $default-color: #909090;\r\n    $first-color: #ff9600;\r\n    $second-color: #006ac7;\r\n    $third-color: #2b5aa0;\r\n    $danger-color: #cc0000;\r\n    $info-color: #0066be;\r\n    $success-color: #17a400;\r\n    $warning-color: #bdbb00;\r\n    \r\n//CONFIG COLORS\r\n    $type-status: \"default\" \"gray\" \"lightgray\" \"first\" \"second\" \"third\" \"danger\" \"info\" \"success\" \"warning\";\r\n    $color-status: $default-color $gray-color $lightgray-color $first-color $second-color $third-color $danger-color $info-color $success-color $warning-color;\r\n    \r\n    \r\n    \r\n    \r\n    ","//COLS\n  @mixin cols {\n    .clefs {\n      //clefs default width\n      > :not([class*=\"clef-\"], .clef) {\n        flex: 0 0 auto;\n      }\n    \n      //widths .clef-*\n      @for $i from 1 through getVariable($grid, columns) {\n        > .clef-#{$i} {\n          flex: 1 0 calc((100% / #{getVariable($grid, columns)} * #{$i}));\n          width: calc((100% / #{getVariable($grid, columns)} * #{$i}));\n        }\n        > .clef-#{$i}:not(.clefs) {\n          max-width: calc((100% / #{getVariable($grid, columns)} * #{$i}));\n        }\n        > .clef-#{$i}.clefs {\n          max-width: calc((100% / #{getVariable($grid, columns)} * #{$i}) + (#{getVariable($grid, space)} * 2));\n        }\n      }\n    }\n    \n    //without space in .clef/clef-* not .clefs\n    .clefs:not(.-nospace) > :matches(.clef, [class*=\"clef-\"]) {\n        padding: getVariable($grid, space);\n    }\n    \n    //auto width\n    .clefs:not([class*=\"auto-\"]) {\n      > .clef {\n        flex: 1 1 0;\n      }\n    }\n  }\n// /COLS","//ALIGNS\r\n    @mixin aligns {\r\n        .clefs {\r\n            //vertical align\r\n            &.-left {\r\n                justify-content: flex-start;\r\n            }\r\n            &.-center {\r\n                justify-content: center;\r\n            }\r\n            &.-right {\r\n                justify-content: flex-end;\r\n            }\r\n            &.-between {\r\n                justify-content: space-between;\r\n            }\r\n            &.-around {\r\n                justify-content: space-around;\r\n            }\r\n            \r\n            &:not(.-claviers) {\r\n                //horizontal align don't wrap\r\n                &.-top {\r\n                    align-items: flex-start;\r\n                }\r\n                &.-middle {\r\n                    align-items: center;\r\n                }\r\n                &.-bottom {\r\n                    align-items: flex-end;\r\n                }\r\n                &.-baseline {\r\n                    align-items: baseline;\r\n                }\r\n                &.-stretch {\r\n                    align-items: stretch;\r\n                }\r\n            }\r\n            \r\n            &.-claviers {\r\n                &.-top {\r\n                    align-content: flex-start;\r\n                }\r\n                &.-middle {\r\n                    align-content: center;\r\n                }\r\n                &.-between {\r\n                    align-content: space-between;\r\n                }\r\n                &.-around {\r\n                    align-content: space-around;\r\n                }\r\n                &.-stretch {\r\n                    align-content: stretch;\r\n                }\r\n                &.-bottom {\r\n                    align-content: flex-end;\r\n                }\r\n            }\r\n            //CONTENT ALIGN\r\n            \r\n            \r\n            //SELF ALIGN\r\n            > .-intop {\r\n                align-self: flex-start;\r\n            }\r\n            > .-inmiddle {\r\n                align-self: center;\r\n            }\r\n            > .-inbottom {\r\n                align-self: flex-end;\r\n            }\r\n            > .-instretch {\r\n                align-self: stretch;\r\n            }\r\n            > .-inbaseline {\r\n                align-self: baseline;\r\n            }\r\n        }\r\n    }\r\n// /ALIGNS","//MODIFIERS\n  @mixin offset {\n    .clefs {\n      @for $i from 1 through getVariable($grid, columns) {\n        \n        &:not(.-rev) > .offset-#{$i}:matches(.clef, [class*=\"clef-\"]) {\n          margin-left: calc((100% / #{getVariable($grid, columns)}) * #{$i});\n        }\n        &.-rev > .offset-#{$i}:matches(.clef, [class*=\"clef-\"]) {\n          margin-right: calc((100% / #{getVariable($grid, columns)}) * #{$i});\n        }\n      }\n    }\n  }\n// /MODIFIERS","//MODIFIERS\n  @mixin modifiers {\n    .clefs {\n      //modifier only width\n      @for $i from 1 through getVariable($grid, columns) {\n        &.only-#{$i} > .clef {\n          flex: 1 0 calc(100% / #{$i});\n          width: calc(100% / #{$i});\n          max-width: calc(100% / #{$i});\n        }\n      }\n      \n      //min width cols\n      @for $i from 1 through getVariable($grid, columns) {\n        > .min-#{($i * 100)} {\n          min-width: calc(#{$i} * 100px);\n        }\n      }\n      \n      //max width cols\n      @for $i from 1 through getVariable($grid, columns) {\n        > .max-#{($i * 100)} {\n          max-width: calc(#{$i} * 100px);\n        }\n      }\n    }\n  }\n// /MODIFIERS","//RESPONSIVE\n  @mixin responsive {\n    @each $tag in getVariable($grid, responsiveTag) {\n      //responsive when decrease window\n      @media (max-width:nth(getVariable($grid, responsiveWidth), index(getVariable($grid, responsiveTag), $tag))) {\n        .clefs.-claviers {\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}:not(.-increase) {\n            flex: 1 1 100%;\n            width: 100%;\n          }\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}:not(.-increase, .clefs) {\n            max-width: 100%;\n            margin-right: 0;\n            margin-left: 0;\n          }\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}:not(.-increase).clefs {\n            max-width: calc(100%  + (#{getVariable($grid, space)} * 2));\n          }\n        }\n      }\n      \n      //responsive when increase window\n      @media (min-width:nth(getVariable($grid, responsiveWidth), index(getVariable($grid, responsiveTag), $tag))) {\n        .clefs.-claviers {\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}.-increase{\n            flex: 1 1 100%;\n            width: 100%;\n          }\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}.-increase:not(.clefs) {\n            max-width: 100%;\n            margin-right: 0;\n            margin-left: 0;\n          }\n          > :matches(.clef, [class*=\"clef-\"]).-#{$tag}.-increase.clefs {\n            max-width: calc(100%  + (#{getVariable($grid, space)} * 2));\n          }\n        }\n      }\n    }\n  }\n// /RESPONSIVE"]}