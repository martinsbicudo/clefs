@mixin cols($space, $columns) {
  /*COLS*/
  .clefs {
    //clef max width
    .clef { max-width: 100% }

    //.clef without auto width
    > .clef.-noauto {
      flex: 0 0 auto;
    }

    &:not(.-claviers) {
      //widths .clef-*
      @for $i from 1 through $columns {
        > .clef-#{$i} {
          flex: 1 0 calc(100% / #{$columns} * #{$i});
          width: calc(100% / #{$columns} * #{$i});
        }
        > .clef-#{$i}:not(.clefs) {
          max-width: calc(100% / #{$columns} * #{$i});
        }
        > .clef-#{$i}.clefs {
          max-width: calc((100% / #{$columns} * #{$i}) + #{$space});
        }
      }
    }
  }

  //without space in .clef/.clef-* not .clefs
  .clefs:not(.-nospace) > :matches(.clef, [class*="clef-"]) {
      padding: $space / 2;
  }

  //auto width
  .clefs:not([class*="-auto_"], .-auto_disable, .-claviers) {
    > :matches(.clef, .clefs):not(.-noauto) {
      flex: 1 0 100%;
    }
  }
  //auto width
  .clefs.-claviers:not([class*="-auto_"], .-auto_disable) {
    > :matches(.clef, .clefs):not(.-noauto) {
      flex: 1 0 auto;
    }
  }
  /* /COLS*/
}
