{"version":3,"sources":["generic/reset.scss","grid/aligns.scss","grid/auto.scss","grid/cols.scss","clefs.css","grid/debug.scss","settings/variables.scss","settings/config.scss","grid/grids.scss","grid/max.scss","grid/min.scss","grid/offset.scss","grid/order.scss","mixins/queries.scss","mixins/grid.scss"],"names":[],"mappings":"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","file":"clefs.min.css","sourcesContent":["@mixin reset() {\r\n  /*RESET*/\r\n  * {\r\n    //@extend .font-first;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    outline: 0;\r\n    list-style: none;\r\n    box-sizing: border-box;\r\n  }\r\n  html, body {\r\n    min-height: 100vh;\r\n\r\n    //fallback flexbox IOS\r\n    width: 100%;\r\n  }\r\n  body {\r\n    font-size: 14px;\r\n    overflow-x: hidden;\r\n  }\r\n  iframe {\r\n    display: block;\r\n  }\r\n  textarea {\r\n    resize: none;\r\n  }\r\n  /* /RESET*/\r\n}\r\n","@mixin aligns {\r\n  /*ALIGNS*/\r\n  .clefs {\r\n    //---------------- JUSTIFY\r\n    //without .-claviers = horizontal\r\n    //with .-claviers = vertical\r\n\r\n    &.-between {\r\n      justify-content: space-between;\r\n    }\r\n    &.-around {\r\n      justify-content: space-around;\r\n    }\r\n\r\n    //align without .-claviers\r\n    &:not(.-claviers) {\r\n      &.-left {\r\n        justify-content: flex-start;\r\n      }\r\n      &.-center {\r\n        justify-content: center;\r\n      }\r\n      &.-right {\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n\r\n    //align with .-claviers\r\n    &.-claviers {\r\n      &.-top {\r\n        justify-content: flex-start;\r\n      }\r\n      &.-middle {\r\n        justify-content: center;\r\n      }\r\n      &.-bottom {\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n    //---------------- /JUSTIFY\r\n\r\n\r\n    //---------------- VERTICAL\r\n    //without .-claviers\r\n    &:not(.-claviers) {\r\n      //horizontal align not wrap\r\n      &.-top {\r\n        align-items: flex-start;\r\n      }\r\n      &.-middle {\r\n        align-items: center;\r\n      }\r\n      &.-bottom {\r\n        align-items: flex-end;\r\n      }\r\n      &.-baseline {\r\n        align-items: baseline;\r\n      }\r\n      &.-stretch {\r\n        align-items: stretch;\r\n      }\r\n    }\r\n    //---------------- /VERTICAL\r\n\r\n\r\n    //---------------- VERTICAL GROUP\r\n    //with .-score\r\n    &.-score {\r\n      &.-all_top {\r\n        align-content: flex-start;\r\n      }\r\n      &.-all_middle {\r\n        align-content: center;\r\n      }\r\n      &.-all_between {\r\n        align-content: space-between;\r\n      }\r\n      &.-all_around {\r\n        align-content: space-around;\r\n      }\r\n      &.-all_stretch {\r\n        align-content: stretch;\r\n      }\r\n      &.-all_bottom {\r\n        align-content: flex-end;\r\n      }\r\n    }\r\n    //---------------- /VERTICAL GROUP\r\n\r\n    //---------------- SELF ALIGN\r\n    //without .-claviers\r\n    &:not(.-claviers) {\r\n      > .-in_top {\r\n        align-self: flex-start;\r\n      }\r\n      > .-in_middle {\r\n        align-self: center;\r\n      }\r\n      > .-in_bottom {\r\n        align-self: flex-end;\r\n      }\r\n      > .-in_stretch {\r\n        align-self: stretch;\r\n      }\r\n      > .-in_baseline {\r\n        align-self: baseline;\r\n      }\r\n    }\r\n\r\n    //with .-claviers\r\n    &.-claviers {\r\n      > .-in_top {\r\n        margin-bottom: auto;\r\n      }\r\n      > .-in_middle {\r\n        margin-bottom: auto;\r\n        margin-top: auto;\r\n      }\r\n      > .-in_bottom {\r\n        margin-top: auto;\r\n      }\r\n    }\r\n    //---------------- SELF ALIGN\r\n  }\r\n  /* /ALIGNS*/\r\n}\r\n","\r\n@mixin auto($columns) {\r\n  /*AUTO WIDTHS*/\r\n  //modify the auto width .clef\r\n  .clefs {\r\n    //all with .-noauto\r\n    &.-auto_disable > .clef:not(.-noauto) {\r\n      flex: 0 0 auto;\r\n    }\r\n\r\n    //widths\r\n    @for $i from 1 through $columns {\r\n      &.-auto_#{$i}:not(.-claviers) > .clef:not(.-noauto) {\r\n        flex: 1 0 calc((100% / #{$columns} * #{$i}));\r\n        width: calc((100% / #{$columns} * #{$i}));\r\n        max-width: calc((100% / #{$columns} * #{$i}));\r\n      }\r\n    }\r\n  }\r\n  /* /AUTO WIDTHS*/\r\n}\r\n","@mixin cols($space, $columns) {\n  /*COLS*/\n  .clefs {\n    //.clef without auto width\n    > .clef.-noauto {\n      flex: 0 0 auto;\n    }\n\n    &:not(.-claviers) {\n      //widths .clef-*\n      @for $i from 1 through $columns {\n        > .clef-#{$i} {\n          flex: 1 0 calc(100% / #{$columns} * #{$i});\n          width: calc(100% / #{$columns} * #{$i});\n        }\n        > .clef-#{$i}:not(.clefs) {\n          max-width: calc(100% / #{$columns} * #{$i});\n        }\n        > .clef-#{$i}.clefs {\n          max-width: calc((100% / #{$columns} * #{$i}) + #{$space});\n        }\n      }\n    }\n  }\n\n  //without space in .clef/.clef-* not .clefs\n  .clefs:not(.-nospace) > :matches(.clef, [class*=\"clef-\"]) {\n      padding: $space / 2;\n  }\n\n  //auto width\n  .clefs:not([class*=\"-auto_\"], .-auto_disable) {\n    > .clef:not(.-noauto) {\n      flex: 1 1 0;\n    }\n  }\n  /* /COLS*/\n}\n","/*\r\n * Clefs ready to use!\r\n*/\n/*\r\n----------------------------------------------\r\nFramework Name: Clefs\r\nFramework Url: Creating...\r\nBy: Victor Martins Bicudo\r\nBy Url: https://www.behance.net/victorbicudo\r\nDescription: Simple Frameword made especially for developers!\r\n----------------------------------------------\r\n*/\n/*RESET*/\n* {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  list-style: none;\n  box-sizing: border-box; }\n\nhtml, body {\n  min-height: 100vh;\n  width: 100%; }\n\nbody {\n  font-size: 14px;\n  overflow-x: hidden; }\n\niframe {\n  display: block; }\n\ntextarea {\n  resize: none; }\n\n/* /RESET*/\n/*GRID*/\n/*ALIGNS*/\n.clefs.-between {\n  justify-content: space-between; }\n\n.clefs.-around {\n  justify-content: space-around; }\n\n.clefs:not(.-claviers).-left {\n  justify-content: flex-start; }\n\n.clefs:not(.-claviers).-center {\n  justify-content: center; }\n\n.clefs:not(.-claviers).-right {\n  justify-content: flex-end; }\n\n.clefs.-claviers.-top {\n  justify-content: flex-start; }\n\n.clefs.-claviers.-middle {\n  justify-content: center; }\n\n.clefs.-claviers.-bottom {\n  justify-content: flex-end; }\n\n.clefs:not(.-claviers).-top {\n  align-items: flex-start; }\n\n.clefs:not(.-claviers).-middle {\n  align-items: center; }\n\n.clefs:not(.-claviers).-bottom {\n  align-items: flex-end; }\n\n.clefs:not(.-claviers).-baseline {\n  align-items: baseline; }\n\n.clefs:not(.-claviers).-stretch {\n  align-items: stretch; }\n\n.clefs.-score.-all_top {\n  align-content: flex-start; }\n\n.clefs.-score.-all_middle {\n  align-content: center; }\n\n.clefs.-score.-all_between {\n  align-content: space-between; }\n\n.clefs.-score.-all_around {\n  align-content: space-around; }\n\n.clefs.-score.-all_stretch {\n  align-content: stretch; }\n\n.clefs.-score.-all_bottom {\n  align-content: flex-end; }\n\n.clefs:not(.-claviers) > .-in_top {\n  align-self: flex-start; }\n\n.clefs:not(.-claviers) > .-in_middle {\n  align-self: center; }\n\n.clefs:not(.-claviers) > .-in_bottom {\n  align-self: flex-end; }\n\n.clefs:not(.-claviers) > .-in_stretch {\n  align-self: stretch; }\n\n.clefs:not(.-claviers) > .-in_baseline {\n  align-self: baseline; }\n\n.clefs.-claviers > .-in_top {\n  margin-bottom: auto; }\n\n.clefs.-claviers > .-in_middle {\n  margin-bottom: auto;\n  margin-top: auto; }\n\n.clefs.-claviers > .-in_bottom {\n  margin-top: auto; }\n\n/* /ALIGNS*/\n/*AUTO WIDTHS*/\n.clefs.-auto_disable > .clef:not(.-noauto) {\n  flex: 0 0 auto; }\n\n.clefs.-auto_1:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 1));\n  width: calc((100% / 12 * 1));\n  max-width: calc((100% / 12 * 1)); }\n\n.clefs.-auto_2:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 2));\n  width: calc((100% / 12 * 2));\n  max-width: calc((100% / 12 * 2)); }\n\n.clefs.-auto_3:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 3));\n  width: calc((100% / 12 * 3));\n  max-width: calc((100% / 12 * 3)); }\n\n.clefs.-auto_4:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 4));\n  width: calc((100% / 12 * 4));\n  max-width: calc((100% / 12 * 4)); }\n\n.clefs.-auto_5:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 5));\n  width: calc((100% / 12 * 5));\n  max-width: calc((100% / 12 * 5)); }\n\n.clefs.-auto_6:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 6));\n  width: calc((100% / 12 * 6));\n  max-width: calc((100% / 12 * 6)); }\n\n.clefs.-auto_7:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 7));\n  width: calc((100% / 12 * 7));\n  max-width: calc((100% / 12 * 7)); }\n\n.clefs.-auto_8:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 8));\n  width: calc((100% / 12 * 8));\n  max-width: calc((100% / 12 * 8)); }\n\n.clefs.-auto_9:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 9));\n  width: calc((100% / 12 * 9));\n  max-width: calc((100% / 12 * 9)); }\n\n.clefs.-auto_10:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 10));\n  width: calc((100% / 12 * 10));\n  max-width: calc((100% / 12 * 10)); }\n\n.clefs.-auto_11:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 11));\n  width: calc((100% / 12 * 11));\n  max-width: calc((100% / 12 * 11)); }\n\n.clefs.-auto_12:not(.-claviers) > .clef:not(.-noauto) {\n  flex: 1 0 calc((100% / 12 * 12));\n  width: calc((100% / 12 * 12));\n  max-width: calc((100% / 12 * 12)); }\n\n/* /AUTO WIDTHS*/\n/*COLS*/\n.clefs > .clef.-noauto {\n  flex: 0 0 auto; }\n\n.clefs:not(.-claviers) > .clef-1 {\n  flex: 1 0 calc(100% / 12 * 1);\n  width: calc(100% / 12 * 1); }\n\n.clefs:not(.-claviers) > .clef-1:not(.clefs) {\n  max-width: calc(100% / 12 * 1); }\n\n.clefs:not(.-claviers) > .clef-1.clefs {\n  max-width: calc((100% / 12 * 1) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-2 {\n  flex: 1 0 calc(100% / 12 * 2);\n  width: calc(100% / 12 * 2); }\n\n.clefs:not(.-claviers) > .clef-2:not(.clefs) {\n  max-width: calc(100% / 12 * 2); }\n\n.clefs:not(.-claviers) > .clef-2.clefs {\n  max-width: calc((100% / 12 * 2) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-3 {\n  flex: 1 0 calc(100% / 12 * 3);\n  width: calc(100% / 12 * 3); }\n\n.clefs:not(.-claviers) > .clef-3:not(.clefs) {\n  max-width: calc(100% / 12 * 3); }\n\n.clefs:not(.-claviers) > .clef-3.clefs {\n  max-width: calc((100% / 12 * 3) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-4 {\n  flex: 1 0 calc(100% / 12 * 4);\n  width: calc(100% / 12 * 4); }\n\n.clefs:not(.-claviers) > .clef-4:not(.clefs) {\n  max-width: calc(100% / 12 * 4); }\n\n.clefs:not(.-claviers) > .clef-4.clefs {\n  max-width: calc((100% / 12 * 4) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-5 {\n  flex: 1 0 calc(100% / 12 * 5);\n  width: calc(100% / 12 * 5); }\n\n.clefs:not(.-claviers) > .clef-5:not(.clefs) {\n  max-width: calc(100% / 12 * 5); }\n\n.clefs:not(.-claviers) > .clef-5.clefs {\n  max-width: calc((100% / 12 * 5) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-6 {\n  flex: 1 0 calc(100% / 12 * 6);\n  width: calc(100% / 12 * 6); }\n\n.clefs:not(.-claviers) > .clef-6:not(.clefs) {\n  max-width: calc(100% / 12 * 6); }\n\n.clefs:not(.-claviers) > .clef-6.clefs {\n  max-width: calc((100% / 12 * 6) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-7 {\n  flex: 1 0 calc(100% / 12 * 7);\n  width: calc(100% / 12 * 7); }\n\n.clefs:not(.-claviers) > .clef-7:not(.clefs) {\n  max-width: calc(100% / 12 * 7); }\n\n.clefs:not(.-claviers) > .clef-7.clefs {\n  max-width: calc((100% / 12 * 7) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-8 {\n  flex: 1 0 calc(100% / 12 * 8);\n  width: calc(100% / 12 * 8); }\n\n.clefs:not(.-claviers) > .clef-8:not(.clefs) {\n  max-width: calc(100% / 12 * 8); }\n\n.clefs:not(.-claviers) > .clef-8.clefs {\n  max-width: calc((100% / 12 * 8) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-9 {\n  flex: 1 0 calc(100% / 12 * 9);\n  width: calc(100% / 12 * 9); }\n\n.clefs:not(.-claviers) > .clef-9:not(.clefs) {\n  max-width: calc(100% / 12 * 9); }\n\n.clefs:not(.-claviers) > .clef-9.clefs {\n  max-width: calc((100% / 12 * 9) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-10 {\n  flex: 1 0 calc(100% / 12 * 10);\n  width: calc(100% / 12 * 10); }\n\n.clefs:not(.-claviers) > .clef-10:not(.clefs) {\n  max-width: calc(100% / 12 * 10); }\n\n.clefs:not(.-claviers) > .clef-10.clefs {\n  max-width: calc((100% / 12 * 10) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-11 {\n  flex: 1 0 calc(100% / 12 * 11);\n  width: calc(100% / 12 * 11); }\n\n.clefs:not(.-claviers) > .clef-11:not(.clefs) {\n  max-width: calc(100% / 12 * 11); }\n\n.clefs:not(.-claviers) > .clef-11.clefs {\n  max-width: calc((100% / 12 * 11) + 1.5rem); }\n\n.clefs:not(.-claviers) > .clef-12 {\n  flex: 1 0 calc(100% / 12 * 12);\n  width: calc(100% / 12 * 12); }\n\n.clefs:not(.-claviers) > .clef-12:not(.clefs) {\n  max-width: calc(100% / 12 * 12); }\n\n.clefs:not(.-claviers) > .clef-12.clefs {\n  max-width: calc((100% / 12 * 12) + 1.5rem); }\n\n.clefs:not(.-nospace) > :matches(.clef, [class*=\"clef-\"]) {\n  padding: 0.75rem; }\n\n.clefs:not([class*=\"-auto_\"], .-auto_disable) > .clef:not(.-noauto) {\n  flex: 1 1 0; }\n\n/* /COLS*/\n/*DEBUG*/\n[clefs-debug] {\n  position: relative; }\n  [clefs-debug]:before {\n    content: \"No problem found.\";\n    background: #17a400;\n    min-width: 100px;\n    position: absolute;\n    color: #fff;\n    border-radius: 3px;\n    padding: 3px 5px;\n    display: block;\n    z-index: 999; }\n\n.clefs:not(.-nospace) > .clefs:matches(.clef, [class*=\"clef-\"]):before {\n  width: calc(100% - 3.75rem);\n  top: 1.5rem;\n  left: 1.5rem; }\n\n.clefs.-nospace > :matches(.clefs, .clef, [class*=\"clef-\"]):before,\n.clefs:not(.-nospace) > :not(.clefs):matches(.clef, [class*=\"clef-\"]):before {\n  width: calc(100% - 2.25rem);\n  top: 0.75rem;\n  left: 0.75rem; }\n\n:not(.clefs) > :not(.clefs):matches(.clef, [class*=\"clef-\"]):before {\n  width: 100%;\n  top: 0;\n  left: 0; }\n\n[clefs-debug].-claviers.-score:before {\n  content: \"Warning! The use of the .-claviers and .-score in the same selector can cause layout problems.\";\n  background: #eaab00; }\n\n[clefs-debug].clef[class*=\"clef-\"]:before {\n  content: \"Notice! The use of the .clef and .clef-* in the same selector isn't necessary.\";\n  background: #0066be; }\n\n[clefs-debug][class*=\"order-\"]:matches(.in-first, .in-last):before {\n  content: \"Notice! The use of the .order- * and .in-first / .in-last classes in the same selector can generate conflict between them.\";\n  background: #0066be; }\n\n:not(.clefs) > [clefs-debug]:not(.clefs):matches(.clef, [class*=\"clef-\"]):before {\n  content: \"Danger! The .clef/.clef-* classes must be direct children of a .clefs class.\";\n  background: #cc0000; }\n\n/* /DEBUG*/\n/*GRIDS*/\n:not(.clefs) > .clefs:not(.-nospace),\n.clefs:not(.-nospace):matches(.clef, [class*=\"clef-\"]) {\n  margin-top: -0.75rem;\n  margin-right: -0.75rem;\n  margin-left: -0.75rem; }\n\n.clefs:not(.-nospace) > .clefs.-nospace {\n  padding: 0.75rem; }\n\n:not(.clefs) > .clefs:not(:last-child) {\n  margin-bottom: 0.75rem; }\n\n:not(.clefs) > .clefs:last-child,\n.clefs > .clefs:matches(.clef, [class*=\"clef-\"]):not(.-nospace) {\n  margin-bottom: -0.75rem; }\n\n.clefs {\n  display: flex;\n  align-items: stretch;\n  flex-direction: row; }\n  .clefs:not(.clef, [class*=\"clef-\"], .-noauto) {\n    flex-basis: 100%;\n    min-width: 100%; }\n  .clefs:not(.clef, [class*=\"clef-\"]).-noauto {\n    flex: 0 0 auto; }\n  .clefs .-reverse:not(.-score, .-claviers) {\n    flex-direction: row-reverse; }\n  .clefs.-score {\n    flex-wrap: wrap; }\n  .clefs.-score.-reverse {\n    flex-wrap: wrap-reverse; }\n  .clefs.-score.-revall {\n    flex-wrap: wrap-reverse;\n    flex-direction: row-reverse; }\n  .clefs.-claviers {\n    flex-direction: column; }\n  .clefs.-claviers.-reverse {\n    flex-direction: column-reverse; }\n\n/* /GRIDS*/\n/*MAX WIDTH*/\n.clefs > .max-100:matches(.clef, .clefs) {\n  max-width: calc(1 * 100px); }\n\n.clefs > .max-200:matches(.clef, .clefs) {\n  max-width: calc(2 * 100px); }\n\n.clefs > .max-300:matches(.clef, .clefs) {\n  max-width: calc(3 * 100px); }\n\n.clefs > .max-400:matches(.clef, .clefs) {\n  max-width: calc(4 * 100px); }\n\n.clefs > .max-500:matches(.clef, .clefs) {\n  max-width: calc(5 * 100px); }\n\n.clefs > .max-600:matches(.clef, .clefs) {\n  max-width: calc(6 * 100px); }\n\n.clefs > .max-700:matches(.clef, .clefs) {\n  max-width: calc(7 * 100px); }\n\n.clefs > .max-800:matches(.clef, .clefs) {\n  max-width: calc(8 * 100px); }\n\n.clefs > .max-900:matches(.clef, .clefs) {\n  max-width: calc(9 * 100px); }\n\n.clefs > .max-1000:matches(.clef, .clefs) {\n  max-width: calc(10 * 100px); }\n\n.clefs > .max-1100:matches(.clef, .clefs) {\n  max-width: calc(11 * 100px); }\n\n.clefs > .max-1200:matches(.clef, .clefs) {\n  max-width: calc(12 * 100px); }\n\n/* /MAX WIDTH*/\n/*MIN WIDTH*/\n.clefs > .min-100:matches(.clef, .clefs) {\n  min-width: calc(1 * 100px); }\n\n.clefs > .min-200:matches(.clef, .clefs) {\n  min-width: calc(2 * 100px); }\n\n.clefs > .min-300:matches(.clef, .clefs) {\n  min-width: calc(3 * 100px); }\n\n.clefs > .min-400:matches(.clef, .clefs) {\n  min-width: calc(4 * 100px); }\n\n.clefs > .min-500:matches(.clef, .clefs) {\n  min-width: calc(5 * 100px); }\n\n.clefs > .min-600:matches(.clef, .clefs) {\n  min-width: calc(6 * 100px); }\n\n.clefs > .min-700:matches(.clef, .clefs) {\n  min-width: calc(7 * 100px); }\n\n.clefs > .min-800:matches(.clef, .clefs) {\n  min-width: calc(8 * 100px); }\n\n.clefs > .min-900:matches(.clef, .clefs) {\n  min-width: calc(9 * 100px); }\n\n.clefs > .min-1000:matches(.clef, .clefs) {\n  min-width: calc(10 * 100px); }\n\n.clefs > .min-1100:matches(.clef, .clefs) {\n  min-width: calc(11 * 100px); }\n\n.clefs > .min-1200:matches(.clef, .clefs) {\n  min-width: calc(12 * 100px); }\n\n/* /MIN WIDTH*/\n/*OFFSET*/\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-1:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 1); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-1:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 1); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-2:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 2); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-2:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 2); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-3:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 3); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-3:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 3); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-4:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 4); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-4:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 4); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-5:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 5); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-5:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 5); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-6:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 6); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-6:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 6); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-7:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 7); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-7:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 7); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-8:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 8); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-8:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 8); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-9:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 9); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-9:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 9); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-10:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 10); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-10:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 10); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-11:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 11); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-11:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 11); }\n\n.clefs:not(.-claviers):not(.-reverse, .-revall) > .offset-12:matches(.clef, [class*=\"clef-\"]) {\n  margin-left: calc((100% / 12) * 12); }\n\n.clefs:not(.-claviers):matches(.-reverse, .-revall) > .offset-12:matches(.clef, [class*=\"clef-\"]) {\n  margin-right: calc((100% / 12) * 12); }\n\n/* /OFFSET*/\n/*ORDER*/\n.clefs .-first {\n  order: -1; }\n\n.clefs .-last {\n  order: 13; }\n\n.clefs > .-order_1 {\n  order: 1; }\n\n.clefs > .-order_2 {\n  order: 2; }\n\n.clefs > .-order_3 {\n  order: 3; }\n\n.clefs > .-order_4 {\n  order: 4; }\n\n.clefs > .-order_5 {\n  order: 5; }\n\n.clefs > .-order_6 {\n  order: 6; }\n\n.clefs > .-order_7 {\n  order: 7; }\n\n.clefs > .-order_8 {\n  order: 8; }\n\n.clefs > .-order_9 {\n  order: 9; }\n\n.clefs > .-order_10 {\n  order: 10; }\n\n.clefs > .-order_11 {\n  order: 11; }\n\n.clefs > .-order_12 {\n  order: 12; }\n\n/* /ORDER*/\n/*RESPONSIVE*/\n@media (min-width: 368px) and (max-width: 567px) {\n  .clefs > .mobile-1 {\n    flex: 1 0 calc((100% / 12 * 1)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-1,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-1 {\n    max-width: calc((100% / 12 * 1)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-1 {\n    max-width: calc((100% / 12 * 1) + 1.5rem); }\n  .clefs > .mobile-2 {\n    flex: 1 0 calc((100% / 12 * 2)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-2,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-2 {\n    max-width: calc((100% / 12 * 2)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-2 {\n    max-width: calc((100% / 12 * 2) + 1.5rem); }\n  .clefs > .mobile-3 {\n    flex: 1 0 calc((100% / 12 * 3)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-3,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-3 {\n    max-width: calc((100% / 12 * 3)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-3 {\n    max-width: calc((100% / 12 * 3) + 1.5rem); }\n  .clefs > .mobile-4 {\n    flex: 1 0 calc((100% / 12 * 4)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-4,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-4 {\n    max-width: calc((100% / 12 * 4)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-4 {\n    max-width: calc((100% / 12 * 4) + 1.5rem); }\n  .clefs > .mobile-5 {\n    flex: 1 0 calc((100% / 12 * 5)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-5,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-5 {\n    max-width: calc((100% / 12 * 5)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-5 {\n    max-width: calc((100% / 12 * 5) + 1.5rem); }\n  .clefs > .mobile-6 {\n    flex: 1 0 calc((100% / 12 * 6)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-6,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-6 {\n    max-width: calc((100% / 12 * 6)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-6 {\n    max-width: calc((100% / 12 * 6) + 1.5rem); }\n  .clefs > .mobile-7 {\n    flex: 1 0 calc((100% / 12 * 7)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-7,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-7 {\n    max-width: calc((100% / 12 * 7)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-7 {\n    max-width: calc((100% / 12 * 7) + 1.5rem); }\n  .clefs > .mobile-8 {\n    flex: 1 0 calc((100% / 12 * 8)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-8,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-8 {\n    max-width: calc((100% / 12 * 8)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-8 {\n    max-width: calc((100% / 12 * 8) + 1.5rem); }\n  .clefs > .mobile-9 {\n    flex: 1 0 calc((100% / 12 * 9)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-9,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-9 {\n    max-width: calc((100% / 12 * 9)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-9 {\n    max-width: calc((100% / 12 * 9) + 1.5rem); }\n  .clefs > .mobile-10 {\n    flex: 1 0 calc((100% / 12 * 10)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-10,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-10 {\n    max-width: calc((100% / 12 * 10)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-10 {\n    max-width: calc((100% / 12 * 10) + 1.5rem); }\n  .clefs > .mobile-11 {\n    flex: 1 0 calc((100% / 12 * 11)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-11,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-11 {\n    max-width: calc((100% / 12 * 11)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-11 {\n    max-width: calc((100% / 12 * 11) + 1.5rem); }\n  .clefs > .mobile-12 {\n    flex: 1 0 calc((100% / 12 * 12)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).mobile-12,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).mobile-12 {\n    max-width: calc((100% / 12 * 12)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).mobile-12 {\n    max-width: calc((100% / 12 * 12) + 1.5rem); } }\n\n@media (min-width: 568px) and (max-width: 767px) {\n  .clefs > .plus-1 {\n    flex: 1 0 calc((100% / 12 * 1)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-1,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-1 {\n    max-width: calc((100% / 12 * 1)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-1 {\n    max-width: calc((100% / 12 * 1) + 1.5rem); }\n  .clefs > .plus-2 {\n    flex: 1 0 calc((100% / 12 * 2)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-2,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-2 {\n    max-width: calc((100% / 12 * 2)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-2 {\n    max-width: calc((100% / 12 * 2) + 1.5rem); }\n  .clefs > .plus-3 {\n    flex: 1 0 calc((100% / 12 * 3)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-3,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-3 {\n    max-width: calc((100% / 12 * 3)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-3 {\n    max-width: calc((100% / 12 * 3) + 1.5rem); }\n  .clefs > .plus-4 {\n    flex: 1 0 calc((100% / 12 * 4)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-4,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-4 {\n    max-width: calc((100% / 12 * 4)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-4 {\n    max-width: calc((100% / 12 * 4) + 1.5rem); }\n  .clefs > .plus-5 {\n    flex: 1 0 calc((100% / 12 * 5)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-5,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-5 {\n    max-width: calc((100% / 12 * 5)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-5 {\n    max-width: calc((100% / 12 * 5) + 1.5rem); }\n  .clefs > .plus-6 {\n    flex: 1 0 calc((100% / 12 * 6)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-6,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-6 {\n    max-width: calc((100% / 12 * 6)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-6 {\n    max-width: calc((100% / 12 * 6) + 1.5rem); }\n  .clefs > .plus-7 {\n    flex: 1 0 calc((100% / 12 * 7)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-7,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-7 {\n    max-width: calc((100% / 12 * 7)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-7 {\n    max-width: calc((100% / 12 * 7) + 1.5rem); }\n  .clefs > .plus-8 {\n    flex: 1 0 calc((100% / 12 * 8)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-8,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-8 {\n    max-width: calc((100% / 12 * 8)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-8 {\n    max-width: calc((100% / 12 * 8) + 1.5rem); }\n  .clefs > .plus-9 {\n    flex: 1 0 calc((100% / 12 * 9)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-9,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-9 {\n    max-width: calc((100% / 12 * 9)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-9 {\n    max-width: calc((100% / 12 * 9) + 1.5rem); }\n  .clefs > .plus-10 {\n    flex: 1 0 calc((100% / 12 * 10)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-10,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-10 {\n    max-width: calc((100% / 12 * 10)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-10 {\n    max-width: calc((100% / 12 * 10) + 1.5rem); }\n  .clefs > .plus-11 {\n    flex: 1 0 calc((100% / 12 * 11)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-11,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-11 {\n    max-width: calc((100% / 12 * 11)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-11 {\n    max-width: calc((100% / 12 * 11) + 1.5rem); }\n  .clefs > .plus-12 {\n    flex: 1 0 calc((100% / 12 * 12)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).plus-12,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).plus-12 {\n    max-width: calc((100% / 12 * 12)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).plus-12 {\n    max-width: calc((100% / 12 * 12) + 1.5rem); } }\n\n@media (min-width: 768px) and (max-width: 1023px) {\n  .clefs > .tablet-1 {\n    flex: 1 0 calc((100% / 12 * 1)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-1,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-1 {\n    max-width: calc((100% / 12 * 1)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-1 {\n    max-width: calc((100% / 12 * 1) + 1.5rem); }\n  .clefs > .tablet-2 {\n    flex: 1 0 calc((100% / 12 * 2)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-2,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-2 {\n    max-width: calc((100% / 12 * 2)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-2 {\n    max-width: calc((100% / 12 * 2) + 1.5rem); }\n  .clefs > .tablet-3 {\n    flex: 1 0 calc((100% / 12 * 3)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-3,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-3 {\n    max-width: calc((100% / 12 * 3)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-3 {\n    max-width: calc((100% / 12 * 3) + 1.5rem); }\n  .clefs > .tablet-4 {\n    flex: 1 0 calc((100% / 12 * 4)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-4,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-4 {\n    max-width: calc((100% / 12 * 4)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-4 {\n    max-width: calc((100% / 12 * 4) + 1.5rem); }\n  .clefs > .tablet-5 {\n    flex: 1 0 calc((100% / 12 * 5)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-5,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-5 {\n    max-width: calc((100% / 12 * 5)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-5 {\n    max-width: calc((100% / 12 * 5) + 1.5rem); }\n  .clefs > .tablet-6 {\n    flex: 1 0 calc((100% / 12 * 6)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-6,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-6 {\n    max-width: calc((100% / 12 * 6)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-6 {\n    max-width: calc((100% / 12 * 6) + 1.5rem); }\n  .clefs > .tablet-7 {\n    flex: 1 0 calc((100% / 12 * 7)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-7,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-7 {\n    max-width: calc((100% / 12 * 7)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-7 {\n    max-width: calc((100% / 12 * 7) + 1.5rem); }\n  .clefs > .tablet-8 {\n    flex: 1 0 calc((100% / 12 * 8)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-8,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-8 {\n    max-width: calc((100% / 12 * 8)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-8 {\n    max-width: calc((100% / 12 * 8) + 1.5rem); }\n  .clefs > .tablet-9 {\n    flex: 1 0 calc((100% / 12 * 9)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-9,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-9 {\n    max-width: calc((100% / 12 * 9)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-9 {\n    max-width: calc((100% / 12 * 9) + 1.5rem); }\n  .clefs > .tablet-10 {\n    flex: 1 0 calc((100% / 12 * 10)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-10,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-10 {\n    max-width: calc((100% / 12 * 10)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-10 {\n    max-width: calc((100% / 12 * 10) + 1.5rem); }\n  .clefs > .tablet-11 {\n    flex: 1 0 calc((100% / 12 * 11)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-11,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-11 {\n    max-width: calc((100% / 12 * 11)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-11 {\n    max-width: calc((100% / 12 * 11) + 1.5rem); }\n  .clefs > .tablet-12 {\n    flex: 1 0 calc((100% / 12 * 12)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).tablet-12,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).tablet-12 {\n    max-width: calc((100% / 12 * 12)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).tablet-12 {\n    max-width: calc((100% / 12 * 12) + 1.5rem); } }\n\n@media (min-width: 1024px) and (max-width: 1279px) {\n  .clefs > .desktop-1 {\n    flex: 1 0 calc((100% / 12 * 1)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-1,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-1 {\n    max-width: calc((100% / 12 * 1)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-1 {\n    max-width: calc((100% / 12 * 1) + 1.5rem); }\n  .clefs > .desktop-2 {\n    flex: 1 0 calc((100% / 12 * 2)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-2,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-2 {\n    max-width: calc((100% / 12 * 2)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-2 {\n    max-width: calc((100% / 12 * 2) + 1.5rem); }\n  .clefs > .desktop-3 {\n    flex: 1 0 calc((100% / 12 * 3)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-3,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-3 {\n    max-width: calc((100% / 12 * 3)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-3 {\n    max-width: calc((100% / 12 * 3) + 1.5rem); }\n  .clefs > .desktop-4 {\n    flex: 1 0 calc((100% / 12 * 4)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-4,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-4 {\n    max-width: calc((100% / 12 * 4)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-4 {\n    max-width: calc((100% / 12 * 4) + 1.5rem); }\n  .clefs > .desktop-5 {\n    flex: 1 0 calc((100% / 12 * 5)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-5,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-5 {\n    max-width: calc((100% / 12 * 5)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-5 {\n    max-width: calc((100% / 12 * 5) + 1.5rem); }\n  .clefs > .desktop-6 {\n    flex: 1 0 calc((100% / 12 * 6)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-6,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-6 {\n    max-width: calc((100% / 12 * 6)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-6 {\n    max-width: calc((100% / 12 * 6) + 1.5rem); }\n  .clefs > .desktop-7 {\n    flex: 1 0 calc((100% / 12 * 7)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-7,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-7 {\n    max-width: calc((100% / 12 * 7)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-7 {\n    max-width: calc((100% / 12 * 7) + 1.5rem); }\n  .clefs > .desktop-8 {\n    flex: 1 0 calc((100% / 12 * 8)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-8,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-8 {\n    max-width: calc((100% / 12 * 8)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-8 {\n    max-width: calc((100% / 12 * 8) + 1.5rem); }\n  .clefs > .desktop-9 {\n    flex: 1 0 calc((100% / 12 * 9)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-9,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-9 {\n    max-width: calc((100% / 12 * 9)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-9 {\n    max-width: calc((100% / 12 * 9) + 1.5rem); }\n  .clefs > .desktop-10 {\n    flex: 1 0 calc((100% / 12 * 10)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-10,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-10 {\n    max-width: calc((100% / 12 * 10)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-10 {\n    max-width: calc((100% / 12 * 10) + 1.5rem); }\n  .clefs > .desktop-11 {\n    flex: 1 0 calc((100% / 12 * 11)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-11,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-11 {\n    max-width: calc((100% / 12 * 11)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-11 {\n    max-width: calc((100% / 12 * 11) + 1.5rem); }\n  .clefs > .desktop-12 {\n    flex: 1 0 calc((100% / 12 * 12)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).desktop-12,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).desktop-12 {\n    max-width: calc((100% / 12 * 12)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).desktop-12 {\n    max-width: calc((100% / 12 * 12) + 1.5rem); } }\n\n@media (min-width: 1280px) {\n  .clefs > .wide-1 {\n    flex: 1 0 calc((100% / 12 * 1)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-1,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-1 {\n    max-width: calc((100% / 12 * 1)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-1 {\n    max-width: calc((100% / 12 * 1) + 1.5rem); }\n  .clefs > .wide-2 {\n    flex: 1 0 calc((100% / 12 * 2)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-2,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-2 {\n    max-width: calc((100% / 12 * 2)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-2 {\n    max-width: calc((100% / 12 * 2) + 1.5rem); }\n  .clefs > .wide-3 {\n    flex: 1 0 calc((100% / 12 * 3)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-3,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-3 {\n    max-width: calc((100% / 12 * 3)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-3 {\n    max-width: calc((100% / 12 * 3) + 1.5rem); }\n  .clefs > .wide-4 {\n    flex: 1 0 calc((100% / 12 * 4)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-4,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-4 {\n    max-width: calc((100% / 12 * 4)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-4 {\n    max-width: calc((100% / 12 * 4) + 1.5rem); }\n  .clefs > .wide-5 {\n    flex: 1 0 calc((100% / 12 * 5)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-5,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-5 {\n    max-width: calc((100% / 12 * 5)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-5 {\n    max-width: calc((100% / 12 * 5) + 1.5rem); }\n  .clefs > .wide-6 {\n    flex: 1 0 calc((100% / 12 * 6)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-6,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-6 {\n    max-width: calc((100% / 12 * 6)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-6 {\n    max-width: calc((100% / 12 * 6) + 1.5rem); }\n  .clefs > .wide-7 {\n    flex: 1 0 calc((100% / 12 * 7)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-7,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-7 {\n    max-width: calc((100% / 12 * 7)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-7 {\n    max-width: calc((100% / 12 * 7) + 1.5rem); }\n  .clefs > .wide-8 {\n    flex: 1 0 calc((100% / 12 * 8)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-8,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-8 {\n    max-width: calc((100% / 12 * 8)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-8 {\n    max-width: calc((100% / 12 * 8) + 1.5rem); }\n  .clefs > .wide-9 {\n    flex: 1 0 calc((100% / 12 * 9)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-9,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-9 {\n    max-width: calc((100% / 12 * 9)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-9 {\n    max-width: calc((100% / 12 * 9) + 1.5rem); }\n  .clefs > .wide-10 {\n    flex: 1 0 calc((100% / 12 * 10)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-10,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-10 {\n    max-width: calc((100% / 12 * 10)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-10 {\n    max-width: calc((100% / 12 * 10) + 1.5rem); }\n  .clefs > .wide-11 {\n    flex: 1 0 calc((100% / 12 * 11)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-11,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-11 {\n    max-width: calc((100% / 12 * 11)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-11 {\n    max-width: calc((100% / 12 * 11) + 1.5rem); }\n  .clefs > .wide-12 {\n    flex: 1 0 calc((100% / 12 * 12)); }\n  .clefs > :not(.clefs):matches(.clef, [class*=\"clef-\"]).wide-12,\n  .clefs > .clefs:not(.clef, [class*=\"clef-\"]).wide-12 {\n    max-width: calc((100% / 12 * 12)); }\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]).wide-12 {\n    max-width: calc((100% / 12 * 12) + 1.5rem); } }\n\n/* /RESPONSIVE*/\n/* /GRID*/\n","@mixin debug($space) {\n  /*DEBUG*/\n  [clefs-debug] {\n    position: relative;\n\n    //box error message\n    &:before {\n      content: \"No problem found.\";\n      background: $success-color;\n      min-width: 100px;\n      position: absolute;\n      color: #fff;\n      border-radius: 3px;\n      padding: 3px 5px;\n      display: block;\n      z-index: 999;\n    }\n  }\n\n  //positions box\n  .clefs:not(.-nospace) > .clefs:matches(.clef, [class*=\"clef-\"]) {\n    &:before {\n      width: calc(100% - #{$space * 2.5});\n      top: $space;\n      left: $space;\n    }\n  }\n  .clefs.-nospace > :matches(.clefs, .clef, [class*=\"clef-\"]),\n  .clefs:not(.-nospace) > :not(.clefs):matches(.clef, [class*=\"clef-\"]) {\n    &:before {\n      width: calc(100% - #{$space * 1.5});\n      top: $space / 2;\n      left: $space / 2;\n    }\n  }\n  :not(.clefs) > :not(.clefs):matches(.clef, [class*=\"clef-\"]) {\n    &:before {\n      width: 100%;\n      top: 0;\n      left: 0;\n    }\n  }\n\n  //.-claviers + .-score\n  [clefs-debug].-claviers.-score {\n    &:before {\n      content: \"Warning! The use of the .-claviers and .-score in the same selector can cause layout problems.\";\n      background: $warning-color;\n    }\n  }\n\n  //.clef + .clef-*\n  [clefs-debug].clef[class*=\"clef-\"] {\n    &:before {\n      content: \"Notice! The use of the .clef and .clef-* in the same selector isn't necessary.\";\n      background: $info-color;\n    }\n  }\n\n  //.order + .in-first/.in-last\n  [clefs-debug][class*=\"order-\"]:matches(.in-first, .in-last) {\n    &:before {\n      content: \"Notice! The use of the .order- * and .in-first / .in-last classes in the same selector can generate conflict between them.\";\n      background: $info-color;\n    }\n  }\n\n  //not .clefs > .clef\n  :not(.clefs) > [clefs-debug]:not(.clefs):matches(.clef, [class*=\"clef-\"]) {\n    &:before {\n      content: \"Danger! The .clef/.clef-* classes must be direct children of a .clefs class.\";\n      background: $danger-color;\n    }\n  }\n  /* /DEBUG*/\n}\n","//OBJECTS\n  $objects: (\n    wrapper: 1170, //MAX-WIDTH WRAPPER\n    fontSize : 14\n  );\n\n//COLORS\n  $gray-color: #636363;\n  $lightgray-color: #d4d4d4;\n  $default-color: #909090;\n  $first-color: #ff9600;\n  $second-color: #006ac7;\n  $third-color: #2b5aa0;\n  $danger-color: #cc0000;\n  $info-color: #0066be;\n  $success-color: #17a400;\n  $warning-color: #eaab00;\n\n//CONFIG COLORS\n  $type-status: \"default\" \"gray\" \"lightgray\" \"first\" \"second\" \"third\" \"danger\" \"info\" \"success\" \"warning\";\n  $color-status: $default-color $gray-color $lightgray-color $first-color $second-color $third-color $danger-color $info-color $success-color $warning-color;\n","//CONFIGS DEFAULT\r\n//---------------- DEFAULT VALIDATION TYPE\r\n$defaultsType: (\r\n  'grid': 'tags'\r\n);\r\n//---------------- /DEFAULT VALIDATION TYPE\r\n\r\n//---------------- RESET\r\n$reset: (\r\n  enable: true\r\n);\r\n//---------------- /RESET\r\n\r\n//---------------- GRID\r\n$grid: (\r\n  enable: true,\r\n  space: 1.5rem, //SPACE BETWEEN COLUMNS\r\n  columns: 12, //NUMBER OF COLUMNS\r\n  tags: ( //TAGS GRID\r\n    mobile: 368px,\r\n    plus: 568px,\r\n    tablet: 768px,\r\n    desktop: 1024px,\r\n    wide: 1280px\r\n  ),\r\n  enables:  ( //ENABLED PACKAGES\r\n    aligns: true,\r\n    auto: true,\r\n    cols: true,\r\n    debug: true,\r\n    grids: true,\r\n    max: true,\r\n    min: true,\r\n    offset: true,\r\n    order: true,\r\n    responsive: true\r\n  )\r\n);\r\n//---------------- /GRID\r\n","@mixin grids($space) {\r\n  /*GRIDS*/\r\n  //without .-nospace\r\n  :not(.clefs) > .clefs:not(.-nospace),\r\n  .clefs:not(.-nospace):matches(.clef, [class*=\"clef-\"]) {\r\n    margin-top: ($space / 2) * -1;\r\n    margin-right: ($space / 2) * -1;\r\n    margin-left: ($space / 2) * -1;\r\n  }\r\n\r\n  //with .-nospace\r\n  .clefs:not(.-nospace) > .clefs.-nospace {\r\n    padding: #{$space / 2};\r\n  }\r\n\r\n  //margin bottom between .clefs\r\n  :not(.clefs) > .clefs:not(:last-child) {\r\n    margin-bottom: #{$space / 2};\r\n  }\r\n\r\n  //margin bottom :last-child and .clef-*\r\n  :not(.clefs) > .clefs:last-child,\r\n  .clefs > .clefs:matches(.clef, [class*=\"clef-\"]):not(.-nospace) {\r\n    margin-bottom: ($space / 2) * -1;\r\n  }\r\n\r\n  .clefs {\r\n    display: flex;\r\n    align-items: stretch;\r\n    flex-direction: row;\r\n\r\n    //.clefs auto width\r\n    &:not(.clef, [class*=\"clef-\"], .-noauto) {\r\n        flex-basis: 100%;\r\n        min-width: 100%;\r\n    }\r\n\r\n    //.clefs no auto width\r\n    &:not(.clef, [class*=\"clef-\"]).-noauto {\r\n      flex: 0 0 auto;\r\n    }\r\n\r\n    //reverse\r\n    .-reverse:not(.-score, .-claviers) {\r\n      flex-direction: row-reverse;\r\n    }\r\n\r\n    //score\r\n    &.-score {\r\n      flex-wrap: wrap;\r\n    }\r\n    //score reverse\r\n    &.-score.-reverse {\r\n      flex-wrap: wrap-reverse;\r\n    }\r\n    &.-score.-revall {\r\n      flex-wrap: wrap-reverse;\r\n      flex-direction: row-reverse;\r\n    }\r\n\r\n    //claviers\r\n    &.-claviers {\r\n      flex-direction: column;\r\n    }\r\n    //claviers reverse\r\n    &.-claviers.-reverse {\r\n      flex-direction: column-reverse;\r\n    }\r\n  }\r\n  /* /GRIDS*/\r\n}\r\n","@mixin max($columns) {\r\n  /*MAX WIDTH*/\r\n  .clefs {\r\n    //max width .clef/.clefs\r\n    @for $i from 1 through $columns {\r\n      > .max-#{($i * 100)}:matches(.clef, .clefs) {\r\n        max-width: calc(#{$i} * 100px);\r\n      }\r\n    }\r\n  }\r\n  /* /MAX WIDTH*/\r\n}\r\n","@mixin min($columns) {\r\n  /*MIN WIDTH*/\r\n  .clefs {\r\n    //min width .clef/.clefs\r\n    @for $i from 1 through $columns {\r\n      > .min-#{($i * 100)}:matches(.clef, .clefs) {\r\n        min-width: calc(#{$i} * 100px);\r\n      }\r\n    }\r\n  }\r\n  /* /MIN WIDTH*/\r\n}\r\n","@mixin offset($columns) {\n  /*OFFSET*/\n  //without .-claviers\n  .clefs:not(.-claviers) {\n    @for $i from 1 through $columns {\n      //offset without .-reverse\n      &:not(.-reverse, .-revall) > .offset-#{$i}:matches(.clef, [class*=\"clef-\"]) {\n        margin-left: calc((100% / #{$columns}) * #{$i});\n      }\n      //offset with .-reverse\n      &:matches(.-reverse, .-revall) > .offset-#{$i}:matches(.clef, [class*=\"clef-\"]) {\n        margin-right: calc((100% / #{$columns}) * #{$i});\n      }\n    }\n  }\n  /* /OFFSET*/\n}\n","@mixin order($columns) {\n  /*ORDER*/\n  .clefs {\n    //first\n    .-first {\n      order: -1;\n    }\n    //last\n    .-last {\n      order: $columns + 1;\n    }\n    //order to .clef-*\n    @for $i from 1 through $columns {\n      > .-order_#{$i} {\n        order: $i;\n      }\n    }\n  }\n  /* /ORDER*/\n}\n","//MIXINS QUERIES\r\n//min width\r\n@mixin query-min($name, $tags: map-get($grid, tags)) {\r\n  $min: map-get($tags, $name);\r\n  @media (min-width: $min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n//max width\r\n@mixin query-max($name, $tags: map-get($grid, tags)) {\r\n  $max: map-get($tags, $name);\r\n  @media (max-width: $max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n//between queries widths\r\n@mixin query-between($min, $max, $tags: map-get($grid, tags)) {\r\n  $min: map-get($tags, $min);\r\n  $max: map-get($tags, $max);\r\n\r\n  @media (min-width: $min) and (max-width: $max - 1px) {\r\n    @content;\r\n  }\r\n}\r\n\r\n//get query\r\n//reverse queries set TRUE\r\n@mixin get-query($name, $tags) {\r\n  $next: getNextQuery($name, map-keys($tags));\r\n\r\n  @if( $next ) {\r\n    @include query-between($name, $next, $tags) {\r\n      @content;\r\n    }\r\n  }@else{\r\n    @include query-min($name, $tags) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n// /MIXINS QUERIES\r\n","//MIXINS GRID\n//aply grids\n@mixin aply-grids($tag, $values) {\n  $columns: map-get($values, columns);\n  $space: map-get($values, space);\n  $tags: map-get($values, tags);\n  $i: index(map-keys($tags), $tag);\n\n  .clefs {\n    //widths specifics\n    @for $i from 1 through $columns {\n      > .#{$tag}-#{$i} {\n        flex: 1 0 calc((100% / #{$columns} * #{$i}));\n      }\n      > :not(.clefs):matches(.clef, [class*=\"clef-\"]).#{$tag}-#{$i},\n      > .clefs:not(.clef, [class*=\"clef-\"]).#{$tag}-#{$i} {\n        max-width: calc((100% / #{$columns} * #{$i}));\n      }\n      > .clefs:matches(.clef, [class*=\"clef-\"]).#{$tag}-#{$i} {\n        max-width: calc((100% / #{$columns} * #{$i}) + #{$space});\n      }\n    }\n  }\n}\n\n//grid query\n@mixin grid-query($values) {\n  $tags: map-get($values, tags);\n  @each $tag in map-keys($tags) {\n    @include get-query($tag, $tags) {\n      @include aply-grids($tag, $values);\n    }\n  }\n}\n\n//enable grid components\n@mixin grid($values) {\n  //GET VALUES\n  $space: map-get($values, space);\n  $columns: map-get($values, columns);\n  $tags: map-get($values, tags);\n  $enable: map-get($values, enable);\n  $enables: map-get($values, enables);\n\n  //ENABLES\n  $aligns: map-get($enables, aligns);\n  $auto: map-get($enables, auto);\n  $cols: map-get($enables, cols);\n  $debug: map-get($enables, debug);\n  $grids: map-get($enables, grids);\n  $max: map-get($enables, max);\n  $min: map-get($enables, min);\n  $offset: map-get($enables, offset);\n  $order: map-get($enables, order);\n  $responsive: map-get($enables, responsive);\n\n  /*GRID*/\n  @if($aligns){@include aligns;}\n  @if($auto){@include auto($columns);}\n  @if($cols){@include cols($space, $columns);}\n  @if($debug){@include debug($space);}\n  @if($grids){@include grids($space);}\n  @if($max){@include max($columns);}\n  @if($min){@include min($columns);}\n  @if($offset){@include offset($columns);}\n  @if($order){@include order($columns);}\n  @if($responsive){@include responsive($values);}\n  /* /GRID*/\n}\n// /MIXINS GRID\n"]}